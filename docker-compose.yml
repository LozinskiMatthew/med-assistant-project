services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    working_dir: /app
    volumes:
      - ./backend:/app
      - shared_media:/app/media/documents
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    working_dir: /app
    ports:
      - "4200:4200"
    command: npm run start
    environment:
      - CHOKIDAR_USEPOLLING=true

  postgres:
    image: postgres:17
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rag:
    build:
      context: ./rag
      dockerfile: Dockerfile
    container_name: rag
    working_dir: /app
    ports:
      - "8010:8888"
    volumes:
      - ./rag:/app
      - rag_logs:/app/src/logs
      - shared_media:/app/shared_documents
    environment:
      - DEBUG=False
      - COHERE_API_KEY=${COHERE_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    depends_on:
      - postgres

volumes:
  shared_media:
  postgres_data:
  rag_logs: